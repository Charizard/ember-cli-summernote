  <div class="container">

    As of version <b>1.1.0</b>, the addon embraces <b>DDAU</b>.
    The <b>content</b> property is readonly and <b>onContentChange</b> action is used for updated contents.

    As a result to follow <b>DDAU</b>, the summernote internall callback <b>onChange</b> will not be supported through the <b>callbacks</b> property in a consumming application.

    <pre>
    Use the following code to put a wysiwyg editor.
    &#123;&#123;summer-note
                  height=contentHeight
                  btnSize=bs-sm
                  airMode=false
                  focus=false
                  header="Example"
                  content=(readonly postContent)
                  onContentChange=(action 'onContentChange')
                  disabled=myControlVariable
                  callbacks=callbackOptions
                  toolbarOptions=toolbarOptions
                  customButtons=customButtons&#125;&#125;

    </pre>

Example of configuring the toolbar options.

    <pre>
    toolbarOptions: {
      style: false,
      insert: {
        picture: false
      },
      help: true
    }
    </pre>

    All callbacks except <b>onChange</b> are supported.
    The <b>onChange</b> callback are used internally for the <b>onContentChange</b> action.

    <pre>
    callbackOptions: {
      onInit: function() {
        console.log('Summernote is launched');
      },
      onEnter: function() {
        console.log('Enter/Return key pressed');
      },
      onPaste: function(e) {
        console.log('Called event paste');
      },
    },

    </pre>

    <div class='container'>
      <h3>Example </h3>
      {{summer-note height=contentHeight
                    btnSize=bs-sm
                    airMode=false
                    focus=false
                    header="Example"
                    content=(readonly postContent)
                    onContentChange=(action 'onContentChange')
                    disabled=editingDisabled
                    callbacks=callbackOptions
                    toolbarOptions=toolbarOptions
										customButtons=customButtons}}

      <p>Disable editing {{input type="checkbox" checked=editingDisabled}}</p>
    </div>
    <div class="container">
      <div class='wysiwyg-preview'>
        <pre>
          {{{postContent}}}
        </pre>
      </div>
    </div>
    <button {{action 'rerenderCheck' 'The editor is rerendered...'}}>
        Check rerender with new content
    </button>
  </div>
